connect 'jdbc:derby:techdecision2';
CREATE TABLE Members (pkMember INTEGER NOT NULL,fkIdentity INTEGER NOT NULL,fkRole INTEGER NOT NULL, CONSTRAINT MembersPrimaryK PRIMARY KEY(pkMember));
CREATE TABLE Permissions ( pkPermissions INTEGER NOT NULL,fkRole INTEGER NOT NULL,active SMALLINT NOT NULL DEFAULT 1,fkHabilitant INTEGER NOT NULL, CONSTRAINT PermissionPrimaryK PRIMARY KEY(pkPermissions));
CREATE TABLE Role (pkRole INTEGER NOT NULL,name VARCHAR(25) NOT NULL,type SMALLINT NOT NULL DEFAULT 0,haveChild SMALLINT NOT NULL DEFAULT 0,active SMALLINT NOT NULL DEFAULT 1,CONSTRAINT RolePrimaryK PRIMARY KEY(pkRole));
CREATE TABLE RolesLink ( pkRoleLink INTEGER NOT NULL,fkParentRole INTEGER NOT NULL,fkChildRole INTEGER NOT NULL,active SMALLINT NOT NULL DEFAULT 1,CONSTRAINT RoleLinkPrimaryK PRIMARY KEY(pkRoleLink));
CREATE TABLE Groupe (pkGroupe INTEGER NOT NULL,name VARCHAR(25) NOT NULL,type SMALLINT NOT NULL DEFAULT 0,haveChild SMALLINT NOT NULL DEFAULT 0,active SMALLINT NOT NULL DEFAULT 1,CONSTRAINT GroupePrimaryK PRIMARY KEY(pkGroupe));
CREATE TABLE MemberOf (pkMemberOf INTEGER NOT NULL,fkIdentity INTEGER ,fkGroupe INTEGER NOT NULL, fkGroupeNested INTEGER , CONSTRAINT MembersOfPrimaryK PRIMARY KEY(pkMemberOf));
ALTER TABLE RolesLink ADD CONSTRAINT RoleLinkUnique UNIQUE (fkParentRole, fkChildRole);
ALTER TABLE RolesLink ADD CONSTRAINT Child FOREIGN KEY(fkChildRole) REFERENCES Role(pkRole);
ALTER TABLE RolesLink ADD CONSTRAINT Parent FOREIGN KEY(fkParentRole) REFERENCES Role(pkRole);
ALTER TABLE Members ADD CONSTRAINT HaveRole FOREIGN KEY(fkRole) REFERENCES Role(pkRole);
ALTER TABLE Permissions ADD CONSTRAINT HavePermission FOREIGN KEY(fkRole) REFERENCES Role(pkRole);
ALTER TABLE MemberOf ADD CONSTRAINT HaveGroupe FOREIGN KEY(fkGroupe) REFERENCES Groupe(pkGroupe);
ALTER TABLE MemberOf ADD CONSTRAINT HaveNestedGroupe FOREIGN KEY(fkGroupeNested) REFERENCES Groupe(pkGroupe);

